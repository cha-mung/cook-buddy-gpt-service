{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cha73\\\\Downloads\\\\25-1 swai\\\\cook-buddy-gpt\\\\cook-buddy-gpt-service\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ingredients, setIngredients] = useState(\"\");\n  const [recipe, setRecipe] = useState(null); // Í∞ùÏ≤¥Î°ú Î∞õÏùÑ Ï§ÄÎπÑ\n\n  const getRecipe = async () => {\n    setRecipe(null); // Ïù¥Ï†Ñ Í≤∞Í≥º Ï¥àÍ∏∞Ìôî\n    try {\n      const res = await fetch(\"/api/recipe\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          ingredients\n        })\n      });\n      const data = await res.json();\n      if (typeof data.recipe === \"string\") {\n        // ÏòàÏô∏Ï†ÅÏúºÎ°ú ÌÖçÏä§Ìä∏ ÌòïÌÉúÎ°ú Îì§Ïñ¥Ïò® Í≤ΩÏö∞ Ï≤òÎ¶¨\n        setRecipe({\n          title: \"Ï∂îÏ≤ú Ïã§Ìå®\",\n          description: data.recipe,\n          steps: []\n        });\n      } else {\n        setRecipe(data.recipe);\n      }\n    } catch (error) {\n      console.error(\"Î†àÏãúÌîº ÏöîÏ≤≠ Ïã§Ìå®:\", error);\n      setRecipe({\n        title: \"Ïò§Î•ò\",\n        description: \"ÏÑúÎ≤ÑÏôÄÏùò ÌÜµÏã† Ï§ë Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.\",\n        steps: []\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cook Buddy GPT \\uD83C\\uDF73\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC608: \\uACC4\\uB780, \\uB300\\uD30C, \\uBC25\",\n      value: ingredients,\n      onChange: e => setIngredients(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRecipe,\n      children: \"\\uB808\\uC2DC\\uD53C \\uCD94\\uCC9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), recipe && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: recipe.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: recipe.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: recipe.steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: step\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ROoFco77SvvrdVoIkWoBKw5LLss=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","ingredients","setIngredients","recipe","setRecipe","getRecipe","res","fetch","method","headers","body","JSON","stringify","data","json","title","description","steps","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","step","i","_c","$RefreshReg$"],"sources":["C:/Users/cha73/Downloads/25-1 swai/cook-buddy-gpt/cook-buddy-gpt-service/client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [ingredients, setIngredients] = useState(\"\");\n  const [recipe, setRecipe] = useState(null); // Í∞ùÏ≤¥Î°ú Î∞õÏùÑ Ï§ÄÎπÑ\n\n  const getRecipe = async () => {\n    setRecipe(null); // Ïù¥Ï†Ñ Í≤∞Í≥º Ï¥àÍ∏∞Ìôî\n    try {\n      const res = await fetch(\"/api/recipe\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ ingredients }),\n      });\n\n      const data = await res.json();\n\n      if (typeof data.recipe === \"string\") {\n        // ÏòàÏô∏Ï†ÅÏúºÎ°ú ÌÖçÏä§Ìä∏ ÌòïÌÉúÎ°ú Îì§Ïñ¥Ïò® Í≤ΩÏö∞ Ï≤òÎ¶¨\n        setRecipe({ title: \"Ï∂îÏ≤ú Ïã§Ìå®\", description: data.recipe, steps: [] });\n      } else {\n        setRecipe(data.recipe);\n      }\n    } catch (error) {\n      console.error(\"Î†àÏãúÌîº ÏöîÏ≤≠ Ïã§Ìå®:\", error);\n      setRecipe({\n        title: \"Ïò§Î•ò\",\n        description: \"ÏÑúÎ≤ÑÏôÄÏùò ÌÜµÏã† Ï§ë Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.\",\n        steps: [],\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Cook Buddy GPT üç≥</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Ïòà: Í≥ÑÎûÄ, ÎåÄÌåå, Î∞•\"\n        value={ingredients}\n        onChange={(e) => setIngredients(e.target.value)}\n      />\n      <button onClick={getRecipe}>Î†àÏãúÌîº Ï∂îÏ≤ú</button>\n\n      {recipe && (\n        <div className=\"recipe\">\n          <h2>{recipe.title}</h2>\n          <p>{recipe.description}</p>\n          <ol>\n            {recipe.steps.map((step, i) => (\n              <li key={i}>{step}</li>\n            ))}\n          </ol>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}